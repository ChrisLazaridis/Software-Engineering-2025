@using System.Security.Claims
@inject SoftEng2025.Data.ApplicationDbContext _db

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SoftEng2025</title>

    <!-- 1. Bootstrap core CSS -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <!-- 2. Material Design theme -->
    <link rel="stylesheet"
          href="~/bootstrap-material-design/dist/css/bootstrap-material-design.min.css" />

    <!-- 3. Your overrides & theme variables -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SoftEng2025.styles.css" asp-append-version="true" />

    <!-- 4. Leaflet CSS -->
    <link rel="stylesheet"
          href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          crossorigin="" />

    @RenderSection("Styles", required: false)

    <!-- 5. Leaflet JS (in head so inline <map> scripts see `L`) -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            crossorigin=""></script>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">SoftEng2025</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                        data-bs-target=".navbar-collapse"
                        aria-controls="navbarSupportedContent"
                        aria-expanded="false"
                        aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @{
                            // Determine the logged‐in user’s ID, and if they are Entrepreneur / Admin
                            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                            var isEnt = !string.IsNullOrEmpty(userId)
                            && _db.Entrepreneurs.Any(e => e.UserId == userId);
                            var isAdmin = !string.IsNullOrEmpty(userId)
                            && _db.Admins.Any(a => a.UserId == userId);
                        }

                        @* Admin links *@
                        @if (isAdmin)
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-page="/Admin/Index">Restaurants</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-page="/Admin/Reviews">Reviews</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-page="/Admin/Users">Users</a>
                            </li>
                        }
                        else if (isEnt)
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-page="/Entrepreneur/Index">My Dashboard</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-page="/Index">Home</a>
                            </li>
                        }

                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
                    </ul>

                    @* ========== NOTIFICATION DROPDOWN ========== *@
                    @if (!string.IsNullOrEmpty(userId) && (isEnt || isAdmin))
                    {
                        <ul class="navbar-nav align-items-center">

                            <li class="nav-item dropdown">
                                @* The bell icon (you can swap for any Material icon) *@
                                <a class="nav-link dropdown-toggle position-relative" href="#"
                                   id="notificationDropdown"
                                   role="button"
                                   data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <span class="material-icons">notifications</span>
                                    @{
                                        // Show a badge if there are any unread notifications
                                        int notiCount = 0;
                                        if (isEnt)
                                        {
                                            notiCount = _db.EntrepreneurNotifications
                                            .Count(n => n.UserId == userId);
                                        }
                                        else if (isAdmin)
                                        {
                                            notiCount = _db.AdminNotifications.Count();
                                        }
                                    }
                                    @if (notiCount > 0)
                                    {
                                        <span class="badge bg-danger position-absolute top-0 start-100 translate-middle">
                                            @notiCount
                                        </span>
                                    }
                                </a>

                                <div class="dropdown-menu dropdown-menu-end"
                                     aria-labelledby="notificationDropdown"
                                     style="min-width: 300px;">
                                    <h6 class="dropdown-header">Notifications</h6>

                                    @{
                                        if (isEnt)
                                        {
                                            // Fetch entrepreneur notifications (latest first)
                                            var myNotis = _db.EntrepreneurNotifications
                                            .Where(n => n.UserId == userId)
                                            .OrderByDescending(n => n.CreatedAt)
                                            .ToList();
                                            if (myNotis.Count == 0)
                                            {
                                                <span class="dropdown-item-text text-muted">
                                                    No new notifications
                                                </span>
                                            }
                                            else
                                            {
                                                foreach (var noti in myNotis)
                                                {
                                                    <div class="dropdown-item d-flex justify-content-between align-items-start">
                                                        <div>
                                                            <strong>@noti.Type</strong><br />
                                                            <small class="text-muted">
                                                                @noti.CreatedAt.ToLocalTime().ToString("g")
                                                            </small>
                                                            <br />
                                                            @* You can inject more context, e.g. @noti.Review.Restaurant.Name *@
                                                        </div>
                                                        <form method="post"
                                                              asp-page="/Entrepreneur/DeleteNotification"
                                                              asp-route-id="@noti.NotificationId"
                                                              class="ms-2">
                                                            <button type="submit"
                                                                    class="btn btn-sm btn-outline-secondary"
                                                                    title="Dismiss">
                                                                &#x2715;
                                                            </button>
                                                        </form>
                                                    </div>
                                                    <div class="dropdown-divider"></div>
                                                }
                                            }
                                        }
                                        else if (isAdmin)
                                        {
                                            // Fetch admin notifications (latest first)
                                            var adminNotis = _db.AdminNotifications
                                            .OrderByDescending(n => n.CreatedAt)
                                            .ToList();
                                            if (adminNotis.Count == 0)
                                            {
                                                <span class="dropdown-item-text text-muted">
                                                    No new notifications
                                                </span>
                                            }
                                            else
                                            {
                                                foreach (var noti in adminNotis)
                                                {
                                                    <div class="dropdown-item d-flex justify-content-between align-items-start">
                                                        <div>
                                                            <strong>@noti.Type</strong><br />
                                                            <small class="text-muted">
                                                                @noti.CreatedAt.ToLocalTime().ToString("g")
                                                            </small>
                                                            <br />
                                                            @* You can inject context, e.g. if noti.Restaurant != null, show @noti.Restaurant.Name *@
                                                        </div>
                                                        <form method="post"
                                                              asp-page="/Admin/DeleteNotification"
                                                              asp-route-id="@noti.NotificationId"
                                                              class="ms-2">
                                                            <button type="submit"
                                                                    class="btn btn-sm btn-outline-secondary"
                                                                    title="Dismiss">
                                                                &#x2715;
                                                            </button>
                                                        </form>
                                                    </div>
                                                    <div class="dropdown-divider"></div>
                                                }
                                            }
                                        }
                                    }
                                </div>
                            </li>

                        </ul>
                    }

                    <button id="theme-toggle"
                            class="btn btn-outline-secondary"
                            title="Toggle light/dark mode"
                            style="margin-left: .5rem;">
                        🌓
                    </button>

                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - SoftEng2025 - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>

    <!-- 1. jQuery -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!-- 2. Popper.js (required for Bootstrap dropdowns) -->
    <script src="~/lib/popper.js/dist/umd/popper.min.js"></script>
    <!-- 3. Bootstrap JS (without bundle) -->
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- 4. Material Design plugin -->
    <script src="~/bootstrap-material-design/dist/js/bootstrap-material-design.min.js"></script>
    <script>
        $(function() {
            $('body').bootstrapMaterialDesign();
        });
    </script>

    <!-- 5. Your site scripts & theme toggler -->
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/theme.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
